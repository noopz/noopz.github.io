<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - noopz</title>
        <link>https://noopz.github.io/posts/</link>
        <description>All Posts | noopz</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 06 Mar 2021 10:23:53 &#43;0000</lastBuildDate><atom:link href="https://noopz.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Duplicating a Schlage Smartlock Key with a Raspberry Pi.</title>
    <link>https://noopz.github.io/mifareclasscracking/</link>
    <pubDate>Sat, 06 Mar 2021 10:23:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/mifareclasscracking/</guid>
    <description><![CDATA[Duplicating the key for a Schlage Smartlock for $20 using some off-the-shelf RFID parts, some writable keyfobs, and a Raspberry Pi.]]></description>
</item><item>
    <title>Try Hack Me - Gatekeeper Walkthrough</title>
    <link>https://noopz.github.io/gatekeeper/</link>
    <pubDate>Sat, 29 Aug 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/gatekeeper/</guid>
    <description><![CDATA[A write-up tackling the Gatekeeper box on TryHackMe (https://tryhackme.com/room/gatekeeper). This box focuses on identifying a bufferoverflow in a services that is running and exploiting it to gain a low privilege shell, and then escalating privileges.]]></description>
</item><item>
    <title>Narnia Challenges (part 6)</title>
    <link>https://noopz.github.io/narnia_challenges_part6/</link>
    <pubDate>Sat, 08 Aug 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/narnia_challenges_part6/</guid>
    <description><![CDATA[The sixth and final in a multi-part walkthrough for the OverTheWire narnia levels. These write up will focus on narnia 7 level and cover a more advanced case of a format string exploit.]]></description>
</item><item>
    <title>Narnia Challenges (part 5)</title>
    <link>https://noopz.github.io/narnia_challenges_part5/</link>
    <pubDate>Sat, 01 Aug 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/narnia_challenges_part5/</guid>
    <description><![CDATA[The fifth in a multi-part walkthrough for the OverTheWire narnia levels. These write up will focus on narnia 7 level and cover a more advanced case of a format string exploit.]]></description>
</item><item>
    <title>Narnia Challenges (part 4)</title>
    <link>https://noopz.github.io/narnia_challenges_part4/</link>
    <pubDate>Sat, 25 Jul 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/narnia_challenges_part4/</guid>
    <description><![CDATA[The fourth in a multi-part walkthrough for the OverTheWire narnia levels. These write up will focus on narnia 6 level and cover another scenario of buffer overflows.]]></description>
</item><item>
    <title>Narnia Challenges (part 3)</title>
    <link>https://noopz.github.io/narnia_challenges_part3/</link>
    <pubDate>Sat, 18 Jul 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/narnia_challenges_part3/</guid>
    <description><![CDATA[The third in a multi-part walkthrough for the OverTheWire narnia levels. These write up will focus on narnia 5 level and the introduction of format string exploits.]]></description>
</item><item>
    <title>Narnia Challenges (part 2)</title>
    <link>https://noopz.github.io/narnia_challenges_part2/</link>
    <pubDate>Sat, 11 Jul 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/narnia_challenges_part2/</guid>
    <description><![CDATA[The second in a multi-part walkthrough for the OverTheWire narnia levels. These levels focus on classic exploitation techniques of binaries, e.g.: using overflows to redirect input/output, a Return-To exploit and an alternative solution using shellcode.]]></description>
</item><item>
    <title>Creating ShellCode On Narnia</title>
    <link>https://noopz.github.io/shellcode-on-narnia/</link>
    <pubDate>Sat, 04 Jul 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/shellcode-on-narnia/</guid>
    <description><![CDATA[A guide on creating some simple shellcode for the OverTheWire challenges - based on the book ShellCoder's Handbook.]]></description>
</item><item>
    <title>Narnia Challenges (part 1)</title>
    <link>https://noopz.github.io/narnia_challenges_part1/</link>
    <pubDate>Sat, 27 Jun 2020 08:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/narnia_challenges_part1/</guid>
    <description><![CDATA[The first in a multi-part walkthrough for the OverTheWire narnia levels. These levels focus on classic exploitation techniques of binaries, e.g.: bufferoverflows, smashing the stack, etc.]]></description>
</item><item>
    <title>Natas Challenges (part 4)</title>
    <link>https://noopz.github.io/natas_challenges_part4/</link>
    <pubDate>Sat, 20 Jun 2020 18:26:53 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://noopz.github.io/natas_challenges_part4/</guid>
    <description><![CDATA[The fourth in a multi-part walkthrough for the OverTheWire natas levels.]]></description>
</item></channel>
</rss>
